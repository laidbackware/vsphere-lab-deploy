---
- name: Configure nested_hosts
  hosts: localhost
  gather_facts: False
  # vars_files:
  #   - ../answerfile.yml
  tasks:
    - name: Change nested_hostsi hostnames
      vmware_vm_shell:
        hostname: "{{ parent_vcenter.ip }}"
        username: "{{ parent_vcenter.user }}"
        password: "{{ parent_vcenter.password }}"
        datacenter: "{{ parent_vcenter.datacenter }}"
        validate_certs: false
        vm_id: "{{ environment_tag }}-{{ item.key }}"
        vm_username: "{{ nested_host_credentials.user }}"
        vm_password: "{{ nested_host_credentials.password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "system hostname set --fqdn={{ environment_tag }}-{{ item.key }}.{{ domain }}"
        vm_shell_env:
        - "PATH=/bin"
        - "VAR=test"
        vm_shell_cwd: "/tmp"
      with_dict: "{{ nested_hosts }}"
      async: 7200
      poll: 0
      register: hname

    - name: Result check for configuring hostname
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ hname.results }}"
      retries: 10

    - name: Set VLAN to Management portgroup
      vmware_vm_shell:
        hostname: "{{ parent_vcenter.ip }}"
        username: "{{ parent_vcenter.user }}"
        password: "{{ parent_vcenter.password }}"
        datacenter: "{{ parent_vcenter.datacenter }}"
        validate_certs: false
        vm_id: "{{ environment_tag }}-{{ item.key }}"
        vm_username: "{{ nested_host_credentials.user }}"
        vm_password: "{{ nested_host_credentials.password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network vswitch standard portgroup set --portgroup-name='Management Network' --vlan-id={{ item.value.vlan }}"
        vm_shell_env: 
        - "PATH=/bin"
        - "VAR=test"
        vm_shell_cwd: "/tmp"
      with_dict: "{{ nested_hosts }}"
      async: 7200
      poll: 0
      register: hvlan

    - name: Result check for setting VLAN
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ hvlan.results }}"
      retries: 10

    - name: Set vmk0 ip addresses
      vmware_vm_shell:
        hostname: "{{ parent_vcenter.ip }}"
        username: "{{ parent_vcenter.user }}"
        password: "{{ parent_vcenter.password }}"
        datacenter: "{{ parent_vcenter.datacenter }}"
        validate_certs: false
        vm_id: "{{ environment_tag }}-{{ item.key }}"
        vm_username: "{{ nested_host_credentials.user }}"
        vm_password: "{{ nested_host_credentials.password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip interface ipv4 set --interface-name=vmk0 --ipv4={{ item.value.ip }} --netmask={{ item.value.mask }} --type=static"
        vm_shell_env: 
        - "PATH=/bin"
        - "VAR=test"
        vm_shell_cwd: "/tmp"
      with_dict: "{{ nested_hosts }}"
      async: 7200
      poll: 0
      register: hip

    - name: Result check for setting vmk0 ip addresses
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ hip.results }}"
      retries: 10

    - name: Set default gw
      vmware_vm_shell:
        hostname: "{{ parent_vcenter.ip }}"
        username: "{{ parent_vcenter.user }}"
        password: "{{ parent_vcenter.password }}"
        datacenter: "{{ parent_vcenter.datacenter }}"
        validate_certs: false
        vm_id: "{{ environment_tag }}-{{ item.key }}"
        vm_username: "{{ nested_host_credentials.user }}"
        vm_password: "{{ nested_host_credentials.password }}"
        vm_shell: /bin/esxcfg-route
        vm_shell_args: " -a default {{ item.value.gw }}"
        vm_shell_env: 
        - "PATH=/bin"
        - "VAR=test"
        vm_shell_cwd: "/tmp"
      with_dict: "{{ nested_hosts }}"
      async: 7200
      poll: 0
      register: hgw

    - name: Result check for setting default gw
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ hgw.results }}"
      retries: 10

    - name: Set search domain
      vmware_vm_shell:
        hostname: "{{ parent_vcenter.ip }}"
        username: "{{ parent_vcenter.user }}"
        password: "{{ parent_vcenter.password }}"
        datacenter: "{{ parent_vcenter.datacenter }}"
        validate_certs: false
        vm_id: "{{ environment_tag }}-{{ item.key }}"
        vm_username: "{{ nested_host_credentials.user }}"
        vm_password: "{{ nested_host_credentials.password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns search add --domain={{ domain}}"
        vm_shell_env: 
        - "PATH=/bin"
        - "VAR=test"
        vm_shell_cwd: "/tmp"
      with_dict: "{{ nested_hosts }}"
      async: 7200
      poll: 0
      register: hsd

    - name: Result check for setting a search domain
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ hsd.results }}"
      retries: 10

    - name: Set a DNS Server
      vmware_vm_shell:
        hostname: "{{ parent_vcenter.ip }}"
        username: "{{ parent_vcenter.user }}"
        password: "{{ parent_vcenter.password }}"
        datacenter: "{{ parent_vcenter.datacenter }}"
        validate_certs: false
        vm_id: "{{ environment_tag }}-{{ item.key }}"
        vm_username: "{{ nested_host_credentials.user }}"
        vm_password: "{{ nested_host_credentials.password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns server add --server={{ dns1 }}"
        vm_shell_env: 
        - "PATH=/bin"
        - "VAR=test"
        vm_shell_cwd: "/tmp"
      with_dict: "{{ nested_hosts }}"
      async: 7200
      poll: 0
      register: hdns

    - name: Disable SSH Warnings
      vmware_vm_shell:
        hostname: "{{ parent_vcenter.ip }}"
        username: "{{ parent_vcenter.user }}"
        password: "{{ parent_vcenter.password }}"
        datacenter: "{{ parent_vcenter.datacenter }}"
        validate_certs: false
        vm_id: "{{ environment_tag }}-{{ item.key }}"
        vm_username: "{{ nested_host_credentials.user }}"
        vm_password: "{{ nested_host_credentials.password }}"
        vm_shell: /bin/vim-cmd
        vm_shell_args: "hostsvc/advopt/update UserVars.SuppressShellWarning long 1"
        vm_shell_env: 
        - "PATH=/bin"
        - "VAR=test"
        vm_shell_cwd: "/tmp"
      with_dict: "{{ nested_hosts }}"
      async: 7200
      poll: 0
      register: hwrn

    - name: Result check for setting a DNS Server
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      with_items: "{{ hdns.results }}"
      retries: 10
    - name: Add ESXi Host to VCSA
      vmware_host:
        hostname: "{{ nested_vcenter.ip }}"
        username: "{{ nested_vcenter.user }}"
        password: "{{ nested_vcenter.password }}"
        datacenter_name: "{{ nested_vcenter.datacenter }}"
        validate_certs: false
        cluster_name: "{{ item.value.cluster }}"
        esxi_hostname: "{{ item.value.ip }}"
        esxi_username: "{{ nested_host_credentials.user }}"
        esxi_password: "{{ nested_host_credentials.password }}"
        state: present
      with_dict: "{{ nested_hosts }}"

    - name: Add TEP Distributed vSwitch
      vmware_vswitch:
        hostname: "{{ item.value.ip }}"
        username: "{{ nested_host_credentials.user }}"
        password: "{{ nested_host_credentials.password }}"   
        validate_certs: False
        switch: "vSwitch1"
        nics: "vmnic1"
        mtu: 1600
      with_dict: "{{ nested_hosts }}"
      delegate_to: localhost

    - name: Wait 10 seconds before creating port group
      pause: seconds=10

    - name: Add TEP Portgroup to all hosts in a cluster
      vmware_portgroup:
        hostname: "{{ nested_vcenter.ip }}"
        username: "{{ nested_vcenter.user }}"
        password: "{{ nested_vcenter.password }}"
        validate_certs: False
        cluster_name: "{{ item.key }}"
        switch_name: "vSwitch1"
        portgroup_name: "{{ nested_network_names.tep_pg }}"
        vlan_id: 0
      with_dict: "{{ clusters }}"
      delegate_to: localhost
      
    - name: Add Management Network VM Portgroup to all hosts in a cluster
      vmware_portgroup:
        hostname: "{{ nested_vcenter.ip }}"
        username: "{{ nested_vcenter.user }}"
        password: "{{ nested_vcenter.password }}"
        validate_certs: False
        cluster_name: "{{ item.key }}"
        switch_name: "vSwitch0"
        portgroup_name: "{{ nested_network_names.main_pg }}"
        vlan_id: 0
      with_dict: "{{ clusters }}"
      delegate_to: localhost

    - name: Add resource pool to vCenter
      vmware_resource_pool:
        hostname: "{{ nested_vcenter.ip }}"
        username: "{{ nested_vcenter.user }}"
        password: "{{ nested_vcenter.password }}"
        validate_certs: False
        datacenter: '{{ nested_vcenter.datacenter }}'
        cluster: '{{ nested_hosts.esx1.cluster }}'
        resource_pool: '{{ item.value }}'
        state: present
      with_dict: "{{ resource_pools }}"
      delegate_to: localhost