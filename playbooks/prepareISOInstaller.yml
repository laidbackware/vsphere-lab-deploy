---
- name: Prepare ESXi installer ISO
  hosts: localhost
  gather_facts: True
  vars_files:
    - ../answerfile.yml
  tasks:    
    - name: Ensure xorriso is intalled
      package:
        name: xorriso
        state: present

    # - name: Mount ESXi installer
    #   action: mount name='/mnt/ESX' src="{{ esxIso }}" opts=loop fstype=iso9660 state=mounted
    # - name: Copy ISO files
    #   copy: src=/mnt/ESX dest=/tmp/
    # - name: Unmount ESXi installer
    #   action: mount name='/mnt/ESX' src="{{ esxIso }}" fstype=iso9660 state=absent
    
    - name: Fix permissions before delete
      command: chmod -R +w /tmp/ESX
      ignore_errors: yes

    - name: Clean ESX ISO Directory
      file:
        path: /tmp/ESX
        state: absent

    - name: Extract ISO image
      command: xorriso -ecma119_map lowercase -osirrox on -indev {{esxIso}} -extract / /tmp/ESX

    - name: Fix permissions
      command: "{{item}}"
      with_items:
        - chmod 777 /tmp/ESX
        - find /tmp/ESX -type f -exec chmod -c 0644 {} \;

    - name: Edit boot.cfg
      replace:
        dest: /tmp/ESX/boot.cfg
        regexp: 'kernelopt=runweasel'
        replace: 'kernelopt=ks=file://etc/vmware/weasel/KS.CFG'

    - name: insert customks.tgz in boot.cfg modules section
      replace:
        dest: /tmp/ESX/boot.cfg
        regexp: 'imgpayld.tgz$'
        replace: 'imgpayld.tgz --- /customks.tgz'

    - name: Clean KS temp dir path
      file:
        state: absent
        path: "/tmp/ks-esxi/"

    - name: Ensure KS temp dir exists
      file: path=/tmp/ks-esxi/etc/vmware/weasel state=directory

    - name: Create empty KS file
      file:
        path: /tmp/ks-esxi/etc/vmware/weasel/KS.CFG
        state: touch

    - name: Update KS file
      blockinfile:
        path: /tmp/ks-esxi/etc/vmware/weasel/KS.CFG
        block: |
          vmaccepteula
          rootpw {{nestedESX.password}}
          install --firstdisk --overwritevmfs
          network --bootproto=dhcp --device=vmnic0 --addvmportgroup=0
          reboot

          %firstboot --interpreter=busybox
          vim-cmd hostsvc/enable_ssh
          vim-cmd hostsvc/start_ssh
          vim-cmd hostsvc/enable_esx_shell
          vim-cmd hostsvc/start_esx_shell

    - name: Create the custom kickstart tgz file
      archive:
        path: /tmp/ks-esxi/
        dest: /tmp/ESX/customks.tgz
        format: gz

    - name: Burn an ISO image
      command: xorrisofs -relaxed-filenames -J -R -o /tmp/customesxv.iso -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table /tmp/ESX/
      args:
        chdir: /tmp/ESX/
        
    - name: Upload the ISO to the Datastore
      vsphere_copy: host="{{ vc_mng.ip }}" login="{{ vc_mng.user }}" password="{{ vc_mng.password }}" src=/tmp/customesxv.iso datacenter="{{ vc_mng.datacenter }}" datastore="{{ vc_mng.datastore }}" path=/yasenISO/customesxv.iso validate_certs=False
      tags: upload
    # - name: Clean ESX ISO Directory
    #   file:
    #     path: /tmp/ESX/
    #     state: absent
    # - name: Clean KS temp dir path
    #   file:
    #     state: absent
    #     path: "/tmp/ks-esxi/"